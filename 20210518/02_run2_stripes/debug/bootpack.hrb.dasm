
bootpack.hrb      檔案格式 binary
bootpack.hrb
系統架構：UNKNOWN!， 旗標 0x00000000：

開始位址 0x00000000

區段：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009c  00000000  00000000  00000000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
SYMBOL TABLE:
沒有符號


.data 區段的內容：
 0000 00000100 48617269 00000000 00003100  ....Hari......1.
 0010 00000000 7d000000 000000e9 10000000  ....}...........
 0020 00000000 00000000 00000000 00000000  ................
 0030 f30f1efb 5589e583 ec18c745 f400000a  ....U......E....
 0040 00eb188b 45f483e0 0f83ec08 50ff75f4  ....E.......P.u.
 0050 e81d0000 0083c410 ff45f481 7df4ffff  .........E..}...
 0060 0a007edf e8070000 00ebf966 90669090  ..~........f.f..
 0070 f4c38b4c 24048a44 24088801 c3000000  ...L$..D$.......
 0080 04000000 0c000000 05000000 474e5500  ............GNU.
 0090 020000c0 04000000 03000000           ............    

.data 區段的反組譯：

00000000 <.data>:
   0:	00 00                	add    BYTE PTR [eax],al
   2:	01 00                	add    DWORD PTR [eax],eax
   4:	48                   	dec    eax
   5:	61                   	popa   
   6:	72 69                	jb     0x71
   8:	00 00                	add    BYTE PTR [eax],al
   a:	00 00                	add    BYTE PTR [eax],al
   c:	00 00                	add    BYTE PTR [eax],al
   e:	31 00                	xor    DWORD PTR [eax],eax
  10:	00 00                	add    BYTE PTR [eax],al
  12:	00 00                	add    BYTE PTR [eax],al
  14:	7d 00                	jge    0x16
  16:	00 00                	add    BYTE PTR [eax],al
  18:	00 00                	add    BYTE PTR [eax],al
  1a:	00 e9                	add    cl,ch
  1c:	10 00                	adc    BYTE PTR [eax],al
	...
  2e:	00 00                	add    BYTE PTR [eax],al
  30:	f3 0f 1e fb          	endbr32 
  34:	55                   	push   ebp
  35:	89 e5                	mov    ebp,esp
  37:	83 ec 18             	sub    esp,0x18
  3a:	c7 45 f4 00 00 0a 00 	mov    DWORD PTR [ebp-0xc],0xa0000
  41:	eb 18                	jmp    0x5b
  43:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  46:	83 e0 0f             	and    eax,0xf
  49:	83 ec 08             	sub    esp,0x8
  4c:	50                   	push   eax
  4d:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
  50:	e8 1d 00 00 00       	call   0x72
  55:	83 c4 10             	add    esp,0x10
  58:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
  5b:	81 7d f4 ff ff 0a 00 	cmp    DWORD PTR [ebp-0xc],0xaffff
  62:	7e df                	jle    0x43
  64:	e8 07 00 00 00       	call   0x70
  69:	eb f9                	jmp    0x64
  6b:	66 90                	xchg   ax,ax
  6d:	66 90                	xchg   ax,ax
  6f:	90                   	nop
  70:	f4                   	hlt    
  71:	c3                   	ret    
  72:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
  76:	8a 44 24 08          	mov    al,BYTE PTR [esp+0x8]
  7a:	88 01                	mov    BYTE PTR [ecx],al
  7c:	c3                   	ret    
  7d:	00 00                	add    BYTE PTR [eax],al
  7f:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  82:	00 00                	add    BYTE PTR [eax],al
  84:	0c 00                	or     al,0x0
  86:	00 00                	add    BYTE PTR [eax],al
  88:	05 00 00 00 47       	add    eax,0x47000000
  8d:	4e                   	dec    esi
  8e:	55                   	push   ebp
  8f:	00 02                	add    BYTE PTR [edx],al
  91:	00 00                	add    BYTE PTR [eax],al
  93:	c0 04 00 00          	rol    BYTE PTR [eax+eax*1],0x0
  97:	00 03                	add    BYTE PTR [ebx],al
  99:	00 00                	add    BYTE PTR [eax],al
	...
